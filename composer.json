{
	"name": "oliverklee/feuserextrafields",
	"description": "Extra fields for TYPO3 frontend users and drop-in replacement for the removed FrontEndUser Core model",
	"license": "GPL-2.0-or-later",
	"type": "typo3-cms-extension",
	"keywords": [
		"extension",
		"library"
	],
	"authors": [
		{
			"name": "Oliver Klee",
			"email": "typo3-coding@oliverklee.de",
			"homepage": "https://www.oliverklee.de",
			"role": "developer"
		}
	],
	"homepage": "https://www.oliverklee.de/typo3-services/typo3-extensions/",
	"support": {
		"issues": "https://github.com/oliverklee/ext-feuserextrafields/issues",
		"source": "https://github.com/oliverklee/ext-feuserextrafields"
	},
	"require": {
		"php": "^7.4.0 || ~8.0.0 || ~8.1.0 || ~8.2.0 || ~8.3.0",
		"typo3/cms-core": "^11.5.17 || ^12.4.2",
		"typo3/cms-extbase": "^11.5.17 || ^12.4.2"
	},
	"require-dev": {
		"bnf/phpstan-psr-container": "^1.0.1",
		"ergebnis/composer-normalize": "~2.28.3",
		"friendsofphp/php-cs-fixer": "^3.49.0",
		"php-coveralls/php-coveralls": "^2.7.0",
		"phpstan/extension-installer": "^1.3.1",
		"phpstan/phpstan": "^1.10.58",
		"phpstan/phpstan-phpunit": "^1.3.15",
		"phpstan/phpstan-strict-rules": "^1.5.1",
		"phpunit/phpunit": "^9.6.16",
		"saschaegerer/phpstan-typo3": "^1.10.0",
		"squizlabs/php_codesniffer": "^3.8.1",
		"ssch/typo3-rector": "^2.0.3",
		"ssch/typo3-rector-testing-framework": "^2.0.0",
		"symfony/routing": "^5.4.26 || ^6.3.5 || ^7.0.0",
		"symfony/yaml": "^5.4.30 || ^6.3.7 || ^7.0.0",
		"typo3/coding-standards": "~0.6.1",
		"typo3/testing-framework": "^7.0.4",
		"webmozart/assert": "^1.11.0"
	},
	"replace": {
		"typo3-ter/feuserextrafields": "self.version"
	},
	"prefer-stable": true,
	"autoload": {
		"psr-4": {
			"OliverKlee\\FeUserExtraFields\\": "Classes/"
		}
	},
	"autoload-dev": {
		"psr-4": {
			"OliverKlee\\FeUserExtraFields\\Tests\\": "Tests/"
		}
	},
	"config": {
		"allow-plugins": {
			"ergebnis/composer-normalize": true,
			"phpstan/extension-installer": true,
			"typo3/class-alias-loader": true,
			"typo3/cms-composer-installers": true
		},
		"preferred-install": {
			"*": "dist"
		},
		"process-timeout": 1000,
		"sort-packages": true,
		"vendor-dir": ".Build/vendor"
	},
	"extra": {
		"branch-alias": {
			"dev-main": "6.1.x-dev"
		},
		"typo3/cms": {
			"extension-key": "feuserextrafields",
			"web-dir": ".Build/public"
		}
	},
	"scripts": {
		"ci": [
			"@ci:static"
		],
		"ci:composer:normalize": "@composer normalize --no-check-lock --dry-run",
		"ci:coverage": [
			"@ci:coverage:unit",
			"@ci:coverage:functional"
		],
		"ci:coverage:functional": [
			"@coverage:create-directories",
			"find 'Tests/Functional' -wholename '*Test.php' | parallel --gnu 'echo; echo \"Running functional test suite {}\"; .Build/vendor/bin/phpunit -c .Build/vendor/typo3/testing-framework/Resources/Core/Build/FunctionalTests.xml --whitelist Classes --coverage-php=\".Build/coverage/{}.cov\" {}';"
		],
		"ci:coverage:merge": [
			"@coverage:create-directories",
			"tools/phpcov merge --clover=./build/logs/clover.xml ./.Build/coverage/"
		],
		"ci:coverage:unit": [
			"@coverage:create-directories",
			".Build/vendor/bin/phpunit -c .Build/vendor/typo3/testing-framework/Resources/Core/Build/UnitTests.xml --whitelist Classes --coverage-php=.Build/coverage/unit.cov Tests/Unit"
		],
		"ci:dynamic": [
			"@ci:tests"
		],
		"ci:php": [
			"@ci:php:cs-fixer",
			"@ci:php:lint",
			"@ci:php:sniff",
			"@ci:php:stan"
		],
		"ci:php:cs-fixer": "php-cs-fixer fix --config .php-cs-fixer.php -v --dry-run --diff",
		"ci:php:lint": "find .*.php *.php Classes Configuration Tests -name '*.php' -print0 | xargs -r -0 -n 1 -P 4 php -l",
		"ci:php:sniff": "phpcs Classes Configuration Tests",
		"ci:php:stan": "phpstan --no-progress",
		"ci:static": [
			"@ci:composer:normalize",
			"@ci:php:cs-fixer",
			"@ci:php:lint",
			"@ci:php:sniff",
			"@ci:php:stan",
			"@ci:yaml:lint"
		],
		"ci:tests": [
			"@ci:tests:unit",
			"@ci:tests:functional"
		],
		"ci:tests:create-directories": "mkdir -p .Build/public/typo3temp/var/tests",
		"ci:tests:functional": [
			"@ci:tests:create-directories",
			"find 'Tests/Functional' -wholename '*Test.php' | parallel --gnu 'echo; echo \"Running functional test suite {}\"; .Build/vendor/bin/phpunit -c .Build/vendor/typo3/testing-framework/Resources/Core/Build/FunctionalTests.xml {}';"
		],
		"ci:tests:unit": [
			"@ci:tests:create-directories",
			".Build/vendor/bin/phpunit -c .Build/vendor/typo3/testing-framework/Resources/Core/Build/UnitTests.xml Tests/Unit"
		],
		"ci:yaml:lint": "find . ! -path '*.Build/*' -name '*.yml' | xargs -r php ./.Build/vendor/bin/yaml-lint",
		"coverage:create-directories": "mkdir -p build/logs .Build/coverage",
		"docs:generate": [
			"docker run --rm t3docs/render-documentation show-shell-commands > tempfile.sh; echo 'dockrun_t3rd makehtml' >> tempfile.sh; bash tempfile.sh; rm tempfile.sh"
		],
		"fix": [
			"@fix:composer",
			"@fix:php"
		],
		"fix:composer": "@composer normalize --no-check-lock",
		"fix:php": [
			"@fix:php:cs",
			"@fix:php:sniff"
		],
		"fix:php:cs": "php-cs-fixer fix --config .php-cs-fixer.php",
		"fix:php:sniff": "phpcbf Classes Configuration Tests",
		"phpstan:baseline": ".Build/vendor/bin/phpstan --generate-baseline --allow-empty-baseline",
		"prepare-release": [
			"rm -rf .Build",
			"rm -rf .github",
			"rm -rf Tests",
			"rm .editorconfig",
			"rm .gitattributes",
			"rm .gitignore",
			"rm .php-cs-fixer.php",
			"rm .phpstorm.meta.php",
			"rm crowdin.yml",
			"rm phive.xml",
			"rm phpstan-baseline.neon",
			"rm phpstan.neon",
			"rm rector.php"
		]
	},
	"scripts-descriptions": {
		"ci": "Runs all dynamic and static code checks.",
		"ci:composer:normalize": "Checks the composer.json.",
		"ci:coverage": "Generates the code coverage report for unit and functional tests.",
		"ci:coverage:functional": "Generates the code coverage report for functional tests.",
		"ci:coverage:merge": "Merges the code coverage reports for unit and functional tests.",
		"ci:coverage:unit": "Generates the code coverage report for unit tests.",
		"ci:dynamic": "Runs all PHPUnit tests (unit and functional).",
		"ci:php": "Runs all static checks for the PHP files.",
		"ci:php:cs-fixer": "Checks the code style with the PHP Coding Standards Fixer (PHP-CS-Fixer).",
		"ci:php:lint": "Lints the PHP files for syntax errors.",
		"ci:php:sniff": "Checks the code style with PHP_CodeSniffer (PHPCS).",
		"ci:php:stan": "Checks the PHP types using PHPStan.",
		"ci:static": "Runs all static code checks (syntax, style, types).",
		"ci:tests": "Runs all PHPUnit tests (unit and functional).",
		"ci:tests:functional": "Runs the functional tests.",
		"ci:tests:unit": "Runs the unit tests.",
		"ci:yaml:lint": "Lints the YAML files.",
		"coverage:create-directories": "Creates the directories needed for recording and merging the code coverage reports.",
		"docs:generate": "Renders the extension ReST documentation.",
		"fix": "Runs all automatic code style fixes.",
		"fix:composer": "Normalizes all composer.json files.",
		"fix:php": "Runs all fixers for the PHP code.",
		"fix:php:cs": "Fixes the code style with PHP-CS-Fixer.",
		"fix:php:sniff": "Fixes the code style with PHP_CodeSniffer.",
		"phpstan:baseline": "Updates the PHPStan baseline file to match the code.",
		"prepare-release": "Removes development-only files in preparation of a TER release."
	}
}
